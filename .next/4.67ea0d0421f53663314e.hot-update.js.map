{"version":3,"file":"4.67ea0d0421f53663314e.hot-update.js","sources":["webpack:///components/Chat.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\nimport ChatMessage from './ChatMessage';\r\n\r\nconst SAD_EMOJI = [55357, 56864];\r\nconst HAPPY_EMOJI = [55357, 56832];\r\nconst NEUTRAL_EMOJI = [55357, 56848];\r\n\r\nclass Chat extends Component{\r\n    state = {\r\n        chats: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\r\n            cluster: process.env.PUSHER_APP_CLUSTER,\r\n            encrypted: true\r\n        });\r\n\r\n        this.channel = this.pusher.subscribe('chat-room');\r\n        this.channel.bind('new-message', ({chat = null}) => {\r\n            const { chats } = this.state;\r\n            chat && chats.push(chat);\r\n            this.setState({chats});\r\n        });\r\n\r\n        this.pusher.connection.bind('connected', () => {\r\n            axios.post('/messages')\r\n                .then(response => {\r\n                    const chats = response.data.messages;\r\n                    this.setState({ chats });\r\n                });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.pusher.disconnect();\r\n    }\r\n\r\n    handleKeyUp = evt => {\r\n        const value = evt.target.value;\r\n\r\n        if(evt.keyCode === 13 && !evt.shiftKey){\r\n            const { activeUser: user } = this.props;\r\n            const chat = { \r\n                user, \r\n                message: value,\r\n                timestamp: +new Date\r\n            };\r\n\r\n            evt.target.value = '';\r\n            axios.post('/message', chat);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.activeUser && <Fragment>\r\n      \r\n                <div className=\"border-bottom border-gray w-100 d-flex align-items-center bg-white\" style={{ height: 90 }}>\r\n                    <h2 className=\"text-dark mb-0 mx-4 px-2\">{this.props.activeUser}</h2>\r\n                </div>\r\n\r\n                <div className=\"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\" style={{ height: 'calc(100% - 180px)', overflowY: 'scroll' }}>\r\n    \r\n    {this.state.chats.map((chat, index) => {\r\n    \r\n      const previous = Math.max(0, index - 1);\r\n      const previousChat = this.state.chats[previous];\r\n      const position = chat.user === this.props.activeUser ? \"right\" : \"left\";\r\n      \r\n      const isFirst = previous === index;\r\n      const inSequence = chat.user === previousChat.user;\r\n      const hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\r\n      \r\n      const mood = chat.sentiment > 0 ? HAPPY_EMOJI : (chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI);\r\n      \r\n      return (\r\n        <Fragment key={index}>\r\n        \r\n          { (isFirst || !inSequence || hasDelay) && (\r\n            <div className={`d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-${position}`} style={{ fontSize: '0.9rem' }}>\r\n              <span className=\"d-block\" style={{ fontSize: '1.6rem' }}>\r\n                {String.fromCodePoint(...mood)}\r\n              </span>\r\n              <span>{chat.user || 'Anonymous'}</span>\r\n            </div>\r\n          ) }\r\n          \r\n          <ChatMessage message={chat.message} position={position} />\r\n          \r\n        </Fragment>\r\n      );\r\n      \r\n    })}\r\n    \r\n  </div>\r\n                \r\n                <div className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\" style={{ minHeight: 90 }}>\r\n                    <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Enter a chat message\" style={{ resize: 'none' }}></textarea>\r\n                </div>\r\n                \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat;\n\n\n// WEBPACK FOOTER //\n// components/Chat.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;;;;;AA8BA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;;;;;;AAxCA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAkhGA;AACA;AAkGA;;;;A","sourceRoot":""}